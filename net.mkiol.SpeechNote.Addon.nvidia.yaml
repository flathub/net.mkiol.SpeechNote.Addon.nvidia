id: net.mkiol.SpeechNote.Addon.nvidia
runtime: net.mkiol.SpeechNote
runtime-version: beta
sdk: org.kde.Sdk//5.15-24.08
build-extension: true
build-options:
  no-debuginfo: true
  prefix: /app/extensions/nvidia
cleanup:
  - /include
  - "*.a"
modules:
  - name: cuda
    only-arches:
      - x86_64
    buildsystem: simple
    build-commands:
      - sh cuda_12.9.0_575.51.03_linux.run --target ./ --noexec
      - rm -rf builds/*.*
      - rm -rf builds/bin builds/cuda_sanitizer_api builds/integration
      - rm -rf builds/nsight_compute builds/nsight_systems builds/cuda_gdb builds/cuda_documentation
      - mkdir -p ${FLATPAK_DEST}/cuda
      - |
        set -e
        for f in $(find . -name "*.a" | grep -v "libcudart_static.a" | grep -P "static\.a|static_nocallback"); do
          echo "removing $f"
          rm -f "$f"
        done
      - |
        set -e
        cd builds
        for f in *; do
          echo "copying $f => ${FLATPAK_DEST}/cuda/"
          if [ -d $f ]; then
            cp -r $f/* ${FLATPAK_DEST}/cuda/
          else
            cp -P $f ${FLATPAK_DEST}/cuda/
          fi
        done
      - |
        set -e
        cd builds/cuda_cupti/extras/CUPTI/lib64
        for f in libcupti.so*; do
          echo "copying $f => ${FLATPAK_DEST}/cuda/lib64/"
          cp -P $f ${FLATPAK_DEST}/cuda/lib64/
        done
      - rm -rf builds
      - rm -rf cuda_12.9.0_575.51.03_linux.run
      - ${FLATPAK_DEST}/cuda/bin/nvcc nvcc -arch-ls -code-ls
    build-options:
      strip: true
    cleanup:
      - /cuda/bin
      - /cuda/extras
      - /cuda/gds*
      - /cuda/include
      - /cuda/libnvvp
      - /cuda/nsight*
      - /cuda/nv*
      - /cuda/pkg-config
      - /cuda/src
      - /cuda/usr
      - /cuda/cublas_version.txt
      - /cuda/LICENSE
      - /cuda/targets/x86_64-linux/lib/cmake
      - /cuda/targets/x86_64-linux/lib/lib64
      - /cuda/targets/x86_64-linux/lib/libOpenCL.so*
      - /cuda/targets/x86_64-linux/lib/libcusolver.so*
      - /cuda/targets/x86_64-linux/lib/libnppif.so*
      - /cuda/targets/x86_64-linux/lib/libcusolverMg.so*
      - /cuda/targets/x86_64-linux/lib/libcufile*.so*
      - /cuda/targets/x86_64-linux/lib/libcuinj64.so*
      - /cuda/targets/x86_64-linux/lib/libaccinj64.so*
      - /cuda/targets/x86_64-linux/include
      - /cuda/targets/x86_64-linux/res
    sources:
      - type: file
        url: https://developer.download.nvidia.com/compute/cuda/12.9.0/local_installers/cuda_12.9.0_575.51.03_linux.run
        sha256: bbce2b760fe2096ca1c86f729e03bf377c1519add7b2755ecc4e9b0a9e07ee43

  - name: cuda-extras
    only-arches:
      - x86_64
    buildsystem: simple
    build-commands:
      - mkdir -p ${FLATPAK_DEST}/cuda/targets/x86_64-linux/lib
      - |
        set -e
        cd ${FLATPAK_DEST}/cuda/targets/x86_64-linux/lib
        ln -s ${FLATPAK_DEST}/extra/cudnn/libcudnn_adv.so.9.5.1 libcudnn_adv.so.9.5.1
        ln -s ${FLATPAK_DEST}/extra/cudnn/libcudnn_adv.so.9.5.1 libcudnn_adv.so.9
        ln -s ${FLATPAK_DEST}/extra/cudnn/libcudnn_adv.so.9.5.1 libcudnn_adv.so
        ln -s ${FLATPAK_DEST}/extra/cudnn/libcudnn_cnn.so.9.5.1 libcudnn_cnn.so.9.5.1
        ln -s ${FLATPAK_DEST}/extra/cudnn/libcudnn_cnn.so.9.5.1 libcudnn_cnn.so.9
        ln -s ${FLATPAK_DEST}/extra/cudnn/libcudnn_cnn.so.9.5.1 libcudnn_cnn.so
        ln -s ${FLATPAK_DEST}/extra/cudnn/libcudnn_engines_precompiled.so.9.5.1 libcudnn_engines_precompiled.so.9.5.1
        ln -s ${FLATPAK_DEST}/extra/cudnn/libcudnn_engines_precompiled.so.9.5.1 libcudnn_engines_precompiled.so.9
        ln -s ${FLATPAK_DEST}/extra/cudnn/libcudnn_engines_precompiled.so.9.5.1 libcudnn_engines_precompiled.so
        ln -s ${FLATPAK_DEST}/extra/cudnn/libcudnn_engines_runtime_compiled.so.9.5.1 libcudnn_engines_runtime_compiled.so.9.5.1
        ln -s ${FLATPAK_DEST}/extra/cudnn/libcudnn_engines_runtime_compiled.so.9.5.1 libcudnn_engines_runtime_compiled.so.9
        ln -s ${FLATPAK_DEST}/extra/cudnn/libcudnn_engines_runtime_compiled.so.9.5.1 libcudnn_engines_runtime_compiled.so
        ln -s ${FLATPAK_DEST}/extra/cudnn/libcudnn_graph.so.9.5.1 libcudnn_graph.so.9.5.1
        ln -s ${FLATPAK_DEST}/extra/cudnn/libcudnn_graph.so.9.5.1 libcudnn_graph.so.9
        ln -s ${FLATPAK_DEST}/extra/cudnn/libcudnn_graph.so.9.5.1 libcudnn_graph.so
        ln -s ${FLATPAK_DEST}/extra/cudnn/libcudnn_heuristic.so.9.5.1 libcudnn_heuristic.so.9.5.1
        ln -s ${FLATPAK_DEST}/extra/cudnn/libcudnn_heuristic.so.9.5.1 libcudnn_heuristic.so.9
        ln -s ${FLATPAK_DEST}/extra/cudnn/libcudnn_heuristic.so.9.5.1 libcudnn_heuristic.so
        ln -s ${FLATPAK_DEST}/extra/cudnn/libcudnn_ops.so.9.5.1 libcudnn_ops.so.9.5.1
        ln -s ${FLATPAK_DEST}/extra/cudnn/libcudnn_ops.so.9.5.1 libcudnn_ops.so.9
        ln -s ${FLATPAK_DEST}/extra/cudnn/libcudnn_ops.so.9.5.1 libcudnn_ops.so
        ln -s ${FLATPAK_DEST}/extra/cudnn/libcudnn.so.9.5.1 libcudnn.so.9.5.1
        ln -s ${FLATPAK_DEST}/extra/cudnn/libcudnn.so.9.5.1 libcudnn.so.9
        ln -s ${FLATPAK_DEST}/extra/cudnn/libcudnn.so.9.5.1 libcudnn.so
      - |
        set -e
        cd ${FLATPAK_DEST}/cuda/targets/x86_64-linux/lib
        ln -s ${FLATPAK_DEST}/extra/nccl/libnccl.so.2.26.5 libnccl.so.2.26.5
        ln -s ${FLATPAK_DEST}/extra/nccl/libnccl.so.2.26.5 libnccl.so.2
        ln -s ${FLATPAK_DEST}/extra/nccl/libnccl.so.2.26.5 libnccl.so
    sources:
      - type: extra-data
        url: https://developer.download.nvidia.com/compute/cudnn/redist/cudnn/linux-x86_64/cudnn-linux-x86_64-9.5.1.17_cuda12-archive.tar.xz
        filename: cudnn.tar.xz
        sha256: 35dd20b9c68324ae1288ac36f66ab1f318d2bfecfafb703a82617aa283272be4
        size: 744697316
      - type: extra-data
        url: https://developer.download.nvidia.com/compute/cuda/repos/ubuntu2404/x86_64/libnccl2_2.26.5-1+cuda12.9_amd64.deb
        filename: nccl.deb
        sha256: 9ac19284ba6678e601679b20be8e0187d3b4929c9d65572df538bfc67f00ff2a
        size: 206186488

  - name: python3-pybind11
    only-arches:
      - x86_64
    buildsystem: simple
    cleanup:
      - /bin
      - /lib/python3.12/site-packages/pybind11*
    build-commands:
      - pip3 install --verbose --exists-action=i --no-index --find-links="file://${PWD}"
        --prefix=${FLATPAK_DEST} "pybind11" --no-build-isolation
    sources:
      - type: file
        url: https://files.pythonhosted.org/packages/06/55/9f73c32dda93fa4f539fafa268f9504e83c489f460c380371d94296126cd/pybind11-2.11.1-py3-none-any.whl
        sha256: 33cdd02a6453380dd71cc70357ce388ad1ee8d32bd0e38fc22b273d050aa29b3

  # Due to the limitations of the Flathub infrastructure, it is not possible to build CUDA version of ctranslate2 and whisper.cpp.
  # To overcome this problem, pre-compiled binaries from https://github.com/mkiol/dsnote are installed.
  - name: precompiled-binaries
    only-arches:
      - x86_64
    buildsystem: simple
    build-options:
      env:
        PYTHONPATH: /app/extensions/nvidia/lib/python3.12/site-packages:/app/lib/python3.12/site-packages
    cleanup:
      - /bin
    build-commands:
      - pip3 install --verbose --exists-action=i --no-index --prefix=${FLATPAK_DEST} --no-build-isolation *.whl
      - install -Dm644 *.so* ${FLATPAK_DEST}/lib/
      - |
        cd ${FLATPAK_DEST}/lib
        ln -s libctranslate2.so.4.3.1 libctranslate2.so.4
        ln -s libctranslate2.so.4.3.1 libctranslate2.so
        ln -s libwhisper-cublas.so.1.7.1 libwhisper-cublas.so.1
        ln -s libwhisper-cublas.so.1.7.1 libwhisper-cublas.so
    sources:
      - type: archive
        strip-components: 0
        url: https://github.com/mkiol/dsnote/releases/download/b4.8.0-4/flatpak_binaries_nvidia_1_4.tar.xz
        sha256: d940645db57bb22fe78508b0ba14f4de051d50c4c01199d5698396595a936b49

  - name: python3-torch-cuda
    only-arches:
      - x86_64
    buildsystem: simple
    build-options:
      strip: true
      env:
        PYTHONPATH: /app/extensions/nvidia/lib/python3.12/site-packages:/app/lib/python3.12/site-packages
    build-commands:
      - |
        set -e
        mkdir -p ${FLATPAK_DEST}/lib/python3.12/site-packages
        cd ${FLATPAK_DEST}/lib/python3.12/site-packages
        ln -s ${FLATPAK_DEST}/extra/site-packages/torch torch
        ln -s ${FLATPAK_DEST}/extra/site-packages/torch-2.5.1.dist-info torch-2.5.1.dist-info
        ln -s ${FLATPAK_DEST}/extra/site-packages/functorch functorch
        ln -s ${FLATPAK_DEST}/extra/site-packages/torchgen torchgen
        ln -s ${FLATPAK_DEST}/extra/site-packages/torchaudio torchaudio
        ln -s ${FLATPAK_DEST}/extra/site-packages/torchaudio-2.5.1.dist-info torchaudio-2.5.1.dist-info
        ln -s ${FLATPAK_DEST}/extra/site-packages/torio torio
        ln -s ${FLATPAK_DEST}/extra/site-packages/triton triton
        ln -s ${FLATPAK_DEST}/extra/site-packages/triton-3.1.0.dist-info triton-3.1.0.dist-info
    sources:
      - type: extra-data
        url: https://files.pythonhosted.org/packages/8b/5c/36c114d120bfe10f9323ed35061bc5878cc74f3f594003854b0ea298942f/torch-2.5.1-cp312-cp312-manylinux1_x86_64.whl
        sha256: ed231a4b3a5952177fafb661213d690a72caaad97d5824dd4fc17ab9e15cec03
        filename: torch.whl
        size: 906389343
      - type: extra-data
        url: https://files.pythonhosted.org/packages/78/eb/65f5ba83c2a123f6498a3097746607e5b2f16add29e36765305e4ac7fdd8/triton-3.1.0-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl
        sha256: c8182f42fd8080a7d39d666814fa36c5e30cc00ea7eeeb1a2983dbb4c99a0fdc
        filename: triton.whl
        size: 209551444
      - type: extra-data
        url: https://files.pythonhosted.org/packages/34/1c/345d11bf492a1414dced70a9572ff1eb2c73013578d24fb4d728a91a09d1/torchaudio-2.5.1-cp312-cp312-manylinux1_x86_64.whl
        sha256: 9c8fb06fbd8d2016e7b7caf15a3231867c792a2e3b0f2f8f9013633e9c2ce412
        filename: torchaudio.whl
        size: 3371851

  - name: python3-flash-attn
    only-arches:
      - x86_64
    buildsystem: simple
    build-options:
      strip: true
      env:
        PYTHONPATH: /app/extensions/nvidia/lib/python3.12/site-packages:/app/lib/python3.12/site-packages
    build-commands:
      - pip3 install --verbose --no-deps --exists-action=i --no-index --find-links="file://${PWD}"
        --prefix=${FLATPAK_DEST} flash-attn --no-build-isolation
    sources:
      - type: file
        url: https://github.com/Dao-AILab/flash-attention/releases/download/v2.7.4.post1/flash_attn-2.7.4.post1+cu12torch2.5cxx11abiFALSE-cp312-cp312-linux_x86_64.whl
        dest-filename: flash_attn-2.7.4.post1-cp312-cp312-linux_x86_64.whl
        sha256: a496f383c843ed0cc6e01302556a0947f56828f1ec2b54e5297c4c7eaae39357

  - name: apply-extra-script
    only-arches:
      - x86_64
    buildsystem: simple
    build-commands:
      - install -Dm755 apply_extra ${FLATPAK_DEST}/bin/apply_extra
      - install -Dm755 /usr/bin/ar ${FLATPAK_DEST}/bin/ar
      - install -Dm644 /usr/lib/x86_64-linux-gnu/libsframe.so.1 ${FLATPAK_DEST}/lib/libsframe.so.1
      - install -Dm644 /usr/lib/x86_64-linux-gnu/libbfd-2.44.so ${FLATPAK_DEST}/lib/libbfd-2.44.so
    sources:
      - type: script
        dest-filename: apply_extra
        commands:
          - |
            set -e
            echo
            echo "Installing cuDNN..."
            tar xf cudnn.tar.xz
            rm -rf cudnn.tar.xz
            mv -T cudnn-linux-x86_64-9.5.1.17_cuda12-archive/lib ./cudnn
            rm -rf cudnn-linux-x86_64-9.5.1.17_cuda12-archive
            for f in $(find ./cudnn -name "*.a"); do
              rm -f "$f"
            done
            for f in $(find ./cudnn -type l); do
              rm -f "$f"
            done
          - |
            set -e
            echo "Installing NCCL..."
            mkdir -p nccl_tmp
            mv nccl.deb nccl_tmp/
            cd nccl_tmp
            ar x nccl.deb
            tar xf data.tar.xz
            mv -T usr/lib/x86_64-linux-gnu ../nccl
            cd ..
            rm -rf nccl_tmp
            for f in $(find ./nccl -type l); do
              rm -f "$f"
            done
          - |
            set -e
            echo "Installing PyTorch..."
            mkdir -p site-packages
            cd site-packages
            unzip -q ../torch.whl
            rm -rf ../torch.whl
            rm -rf torch/include
            unzip -q ../triton.whl
            rm -rf ../triton.whl
            unzip -q ../torchaudio.whl
            rm -rf ../torchaudio.whl

  - name: metadata
    buildsystem: simple
    build-commands:
      - install -Dm644 -t ${FLATPAK_DEST}/share/metainfo ${FLATPAK_ID}.metainfo.xml
    sources:
      - type: file
        path: net.mkiol.SpeechNote.Addon.nvidia.metainfo.xml
